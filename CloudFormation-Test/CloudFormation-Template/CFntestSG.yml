AWSTemplateFormatVersion: '2010-09-09'
Description: "This template create Security Group" 

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -  
        Label:
          default: Security group Configuration 
        Parameters:
          - SecurityGroupPubEC2Name
          - SecurityGroupRDS
          - SecurityGroupELB

# ------------------------------------------------------------#
# SG論理ID:Nameタグ
# ------------------------------------------------------------#
Parameters:
  SecurityGroupPubEC2Name:
    Description: "Please type the Security group name for EC2 instance. This Parameter will be a Name tag. "
    Type: String
    Default: "CFntest_SG__Pub_EC2"
  SecurityGroupRDS:  
    Description: "Please type the Security group name for RDS instance. This Parameter will be a Name tag. "
    Type: String
    Default: "CFntest_SG__RDS"
  SecurityGroupELB:  
    Description: "Please type the Security group name for ELB. This Parameter will be a Name tag. "
    Type: String
    Default: "CFntest_SG__ELB"
  
Resources:
# ------------------------------------------------------------#
# Security group for EC2 instances
# ------------------------------------------------------------#    
  CFntestSGPubEC2:  
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupName: !Ref SecurityGroupPubEC2Name  
        GroupDescription: "Allow HTTP and SSH"
        SecurityGroupIngress:
          - IpProtocol: tcp
            FromPort: 22
            ToPort: 22
            CidrIp: 0.0.0.0/0
          - IpProtocol: tcp
            FromPort: 80
            ToPort: 80
            CidrIp: 0.0.0.0/0
        Tags: 
          - Key: Name
            Value: !Ref SecurityGroupPubEC2Name 
        VpcId: !ImportValue CFntest-VpcId 

# ------------------------------------------------------------#
# Security group for MySQL RDS instances
# ------------------------------------------------------------#  
  CFntestSGRDS: 
      Type: AWS::EC2::SecurityGroup 
      Properties:
        GroupName: !Ref SecurityGroupRDS 
        GroupDescription: "Only MySQL for CFntestSGPubEC2 is allowed "
        SecurityGroupIngress:
          - IpProtocol: tcp
            FromPort: 3306
            ToPort: 3306
            SourceSecurityGroupId: !Ref CFntestSGPubEC2 
        Tags: 
          - Key: Name
            Value: !Ref SecurityGroupRDS  
        VpcId: !ImportValue CFntest-VpcId

# ------------------------------------------------------------#
# Security group for ELB
# ------------------------------------------------------------#  
  CFntestSGELB:
      Type: AWS::EC2::SecurityGroup
      Properties: 
        GroupName: !Ref SecurityGroupELB
        GroupDescription: "Allow HTTP and HTTPS"
        SecurityGroupIngress: 
            - IpProtocol: tcp
              FromPort: 80
              ToPort: 80
              CidrIp: 0.0.0.0/0 
            - IpProtocol: tcp
              FromPort: 443
              ToPort: 443
              CidrIp: 0.0.0.0/0
        Tags: 
            - Key: Name
              Value: !Ref SecurityGroupELB
        VpcId: !ImportValue CFntest-VpcId         

# ------------------------------------------------------------#
# Outputs
# ------------------------------------------------------------#      
Outputs:
  CFntestSGPubEC2:
    Description: "Public-EC2 id"
    Value: !Ref  CFntestSGPubEC2
    Export:
      Name: "CFntest-SG-Pub-EC2"
  CFntestSGRDS:
    Description: "Private RDS id"
    Value: !Ref CFntestSGRDS  
    Export:
      Name: "CFntest-SG-RDS"   
  CFntestSGELB:
    Description: "Public ELB id"
    Value: !Ref CFntestSGELB  
    Export:
      Name: "CFntest-SG-ELB"                                                 